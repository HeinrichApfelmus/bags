cabal-version:      3.6
name:               bags
version:            0.1.0.0
synopsis:           Bags, indexing and relational databases
description:
  This package implements the container type 'Bag'
  that represents an unordered, finite collection of items.
  It also implements an operation 'indexBy' for grouping
  the collection into an indexed table.

  This combination of types and operations enables
  the implementation of efficient relational databases
  that can be formally verified.

  This package is based on the article

  * J. Gibbons, F. Henglein, R. Hinze, and N. Wu,
    [Relational algebra by way of adjunctions](https://dl.acm.org/doi/10.1145/3236781),
    Proc. ACM Program. Lang. 2, 1 (2018).

  The Haskell code in this package has been generated using
  [agda2hs](https://github.com/agda/agda2hs).
  Properties exported in the documentation have been proven correct.

homepage:           https://github.com/HeinrichApfelmus/bags
license:            Apache-2.0
license-file:       LICENSE
author:             Heinrich Apfelmus
maintainer:         Heinrich Apfelmus <apfelmus at quantentunnel dot de>
copyright:          2025 Cardano Foundation
category:           Data Structures, Database
build-type:         Simple
tested-with:        GHC ==9.6.6
extra-doc-files:    CHANGELOG.md
extra-source-files:
  agda/**/*.agda
  bags.agda-lib
  generate-haskell.sh

common language
  default-language: Haskell2010

common opts-exe
  ghc-options: -threaded -rtsopts -Wall -Wno-redundant-constraints

  if flag(release)
    ghc-options: -O2 -Werror

common opts-lib
  ghc-options:
    -Wall -Wcompat -Wno-redundant-constraints -Wincomplete-uni-patterns
    -Wincomplete-record-updates -Wunused-packages

  if flag(release)
    ghc-options: -O2 -Werror

flag release
  description: Enable optimization and `-Werror`
  default:     False
  manual:      True

library
  import:          opts-lib, language
  hs-source-dirs:  haskell
  build-depends:
    , base        >=4.14 && <5
    , containers  >=0.5  && <0.8

  exposed-modules:
    Data.Bag
    Data.Bag.Prop
    Data.Monoid.Extra
    Data.Monoid.Refinement
    Data.Table
  other-modules:
    Data.Bag.Def
    Data.Bag.Found
    Data.Bag.Quotient
    Data.Bag.Raw
    Data.Table.Def
    Data.Table.Prop
